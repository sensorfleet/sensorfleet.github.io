#!/usr/bin/python3

# Use this to convert images in md file generated by chrome extension:
# https://chrome.google.com/webstore/detail/convert-medium-posts-to-m/aelnflnmpbjgipamcogpdoppjbebnjea
# ... to locally hosted images with proper img width set.
#
# Example run:
# ../tools/blog_fix_images.py logforwarder_1 2021-03-30-Stream-syslog-reliably-from-the-edge-to-SIEM-using-SensorFleet.md 500
# Then, see file 2021-03-30-Stream-syslog-reliably-from-the-edge-to-SIEM-using-SensorFleet.md.new and:
# mv 2021-03-30-Stream-syslog-reliably-from-the-edge-to-SIEM-using-SensorFleet.md.new 2021-03-30-Stream-syslog-reliably-from-the-edge-to-SIEM-using-SensorFleet.md
# git add 2021-03-30-Stream-syslog-reliably-from-the-edge-to-SIEM-using-SensorFleet.md
# git commit

import sys
import requests
import subprocess
from pathlib import Path

if len(sys.argv) != 4:
	print("Usage: blog_fix_images.py <img_dir_name> <blog_post_md_file> <img_width>")
	sys.exit(1)

img_dir_name = sys.argv[1]
md_file = Path(sys.argv[2])
images_dir = md_file.absolute().parent.parent / "img" / "posts" / img_dir_name
if not images_dir.is_dir():
	print("Create images directory {images_dir}...")
	images_dir.mkdir()

url_relative_img_dir = f"/img/posts/{img_dir_name}"
print(f"Relative URL for imgs: {url_relative_img_dir}")

new_md_file = Path(str(md_file) + ".new")
image_number = 0
img_width = int(sys.argv[3])
with md_file.open() as f, new_md_file.open("w") as nf:
	for line in f:
		if line.startswith("![](https://cdn"):
			#![](https://cdn-images-1.medium.com/max/1600/0*35wnm-O5lyo_WsOH)
			tmp = line.split("(", maxsplit=1)[1]
			url = tmp.rstrip().rstrip(")")
			print("Download image URL: ", url)
			r = requests.get(url)
			if r.status_code != 200:
				raise Exception(f"Download error: {r.status_code}")
			image_number += 1
			fn = images_dir / f"img_{image_number}.png"
			with open(images_dir / f"img_{image_number}.png", "wb") as img:
				print(f"Writing {fn}...")
				for chunk in r.iter_content(1024):
					img.write(chunk)
			nf.write(f'  <img src="{url_relative_img_dir}/img_{image_number}.png" title="" width={img_width}>\n\n')
			abs_img = (images_dir / f"img_{image_number}.png").absolute()
			print(f"Add {abs_img} to git...")
			subprocess.check_call(f"git add {abs_img}", shell=True)
		else:
			nf.write(line)

print("Temp file written: ", new_md_file)
print("Verify file contents and replace manually.")
